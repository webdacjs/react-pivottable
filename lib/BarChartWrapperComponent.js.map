{"version":3,"sources":["../src/BarChartWrapperComponent.js"],"names":["BarChartWapperComponent","index","barchartClassNames","usePercentages","absoluteMax","stacked","gauged","children","values","sumReducer","array","reduce","a","b","getBarWrapperClassName","wrapper","getStackedWrapper","Math","random","getGaugedWrapper"],"mappings":";;;;;kBAIwBA,uB;;AAJxB;;;;AAEA;;;;AAEe,SAASA,uBAAT,OASZ;AAAA,MARDC,KAQC,QARDA,KAQC;AAAA,MAPDC,kBAOC,QAPDA,kBAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,MACC,QADDA,MACC;;AACD,MAAMC,aAAa,SAAbA,UAAa;AAAA,WAASC,MAAMC,MAAN,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,IAAIC,CAAd;AAAA,KAAb,EAA8B,CAA9B,CAAT;AAAA,GAAnB;;AAEA,MAAMC,yBAAyB,SAAzBA,sBAAyB,GAAM;AACnC,QAAIZ,sBAAsBA,mBAAmBa,OAA7C,EAAsD;AACpD,aAAOb,mBAAmBa,OAA1B;AACD;AACD,WAAO,eAAP;AACD,GALD;;AAOA,MAAMC,oBAAoB,SAApBA,iBAAoB;AAAA,WACxB;AAAA;AAAA;AACE,mBAAWF,wBADb;AAEE,4BAAkBG,KAAKC,MAAL,EAFpB;AAGE,eAAO,yCAAgBf,cAAhB,EAAgCC,WAAhC;AAHT;AAKGG;AALH,KADwB;AAAA,GAA1B;;AAUA,MAAMY,mBAAmB,SAAnBA,gBAAmB;AAAA,WACvB;AAAA;AAAA;AACE,mBAAWL,wBADb;AAEE,4BAAkBG,KAAKC,MAAL,EAFpB;AAGE,eAAO,yCAAgBf,cAAhB,EAAgCC,WAAhC;AAHT;AAKGG;AALH,KADuB;AAAA,GAAzB;;AAUA,SACE;AAAA;AAAA;AACGF,eAAW,CAACC,MAAZ,IAAsBU,mBADzB;AAEG,KAACX,OAAD,IAAYC,MAAZ,IAAsBa;AAFzB,GADF;AAMD","file":"BarChartWrapperComponent.js","sourcesContent":["import React from 'react';\n\nimport {getWrapperWidth, getGaugedWrapperWidth} from './TableBarchartUtils';\n\nexport default function BarChartWapperComponent({\n  index,\n  barchartClassNames,\n  usePercentages,\n  absoluteMax,\n  stacked,\n  gauged,\n  children,\n  values,\n}) {\n  const sumReducer = array => array.reduce((a, b) => a + b, 0);\n\n  const getBarWrapperClassName = () => {\n    if (barchartClassNames && barchartClassNames.wrapper) {\n      return barchartClassNames.wrapper;\n    }\n    return 'bar-chart-bar';\n  };\n\n  const getStackedWrapper = () => (\n    <div\n      className={getBarWrapperClassName()}\n      key={`bar-chart-${Math.random()}`}\n      style={getWrapperWidth(usePercentages, absoluteMax)}\n    >\n      {children}\n    </div>\n  );\n\n  const getGaugedWrapper = () => (\n    <div\n      className={getBarWrapperClassName()}\n      key={`bar-chart-${Math.random()}`}\n      style={getWrapperWidth(usePercentages, absoluteMax)}\n    >\n      {children}\n    </div>\n  );\n\n  return (\n    <span>\n      {stacked && !gauged && getStackedWrapper()}\n      {!stacked && gauged && getGaugedWrapper()}\n    </span>\n  );\n}\n"]}