{"version":3,"sources":["../src/BarChartComponent.js"],"names":["BarChartComponent","index","value","thiskey","stacked","gauged","maxValsAttrs","minValsAttrs","barchartClassNames","showBarValues","showPopOver","usePercentages","popOverFormatter","rowkey","originalValues","valsAttrs","rowAttrs","formatPopOverValue","val","hovered","setHovered","popOverKeys","popOverValues","map","x","getGaugedBar","getStackedBar","getNonStackedBar","getPopOver","key","i"],"mappings":"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","file":"BarChartComponent.js","sourcesContent":["import React, {useState} from 'react';\nimport Popover from 'react-popover';\nimport {\n  getBarClassName,\n  getBarValue,\n  getChartStyle,\n  getBarWrapperClassName,\n} from './TableBarchartUtils';\n\nexport default function BarChartComponent({\n  index,\n  value,\n  thiskey,\n  stacked,\n  gauged,\n  maxValsAttrs,\n  minValsAttrs,\n  barchartClassNames,\n  showBarValues,\n  showPopOver,\n  usePercentages,\n  popOverFormatter,\n  rowkey,\n  originalValues,\n  valsAttrs,\n  rowAttrs,\n}) {\n  const formatPopOverValue = val =>\n    popOverFormatter ? popOverFormatter(val) : val;\n\n  const [hovered, setHovered] = useState(false);\n  const popOverKeys = [...rowAttrs, ...valsAttrs];\n  const popOverValues = [\n    ...rowkey,\n    ...originalValues.map(x => formatPopOverValue(x)),\n  ];\n\n  const getGaugedBar = () => (\n    <div\n      className={getBarClassName(index, barchartClassNames)}\n      style={getChartStyle(\n        value,\n        thiskey,\n        maxValsAttrs,\n        minValsAttrs,\n        usePercentages,\n        gauged\n      )}\n      onMouseOver={() => setHovered(true)}\n      onMouseOut={() => setHovered()}\n    >\n      {getBarValue(value, thiskey, maxValsAttrs, showBarValues, usePercentages)}\n    </div>\n  );\n\n  const getStackedBar = () => (\n    <div\n      className={getBarClassName(index, barchartClassNames)}\n      style={getChartStyle(\n        value,\n        thiskey,\n        maxValsAttrs,\n        minValsAttrs,\n        usePercentages\n      )}\n      onMouseOver={() => setHovered(true)}\n      onMouseOut={() => setHovered()}\n    >\n      {getBarValue(value, thiskey, maxValsAttrs, showBarValues, usePercentages)}\n    </div>\n  );\n\n  const getNonStackedBar = () => (\n    <div\n      className={getBarWrapperClassName(barchartClassNames)}\n      key={`bar-chart-${index}`}\n      onMouseOver={() => setHovered(true)}\n      onMouseOut={() => setHovered()}\n    >\n      <div\n        className={getBarClassName(index, barchartClassNames)}\n        style={getChartStyle(\n          value,\n          thiskey,\n          maxValsAttrs,\n          minValsAttrs,\n          usePercentages\n        )}\n      >\n        {getBarValue(\n          value,\n          thiskey,\n          maxValsAttrs,\n          showBarValues,\n          usePercentages\n        )}\n      </div>\n    </div>\n  );\n\n  const getPopOver = () => (\n    <div className=\"popoverBox\">\n      <table className=\"popOverBox-table\">\n        <tbody>\n          {popOverKeys.map((key, i) => (\n            <tr key={`tr-${i}`}>\n              <td className=\"popOverBox-table-cell\" key={`tdk-${i}`}>\n                {key}:\n              </td>\n              <td className=\"popOverBox-table-cell\" key={`tdv-${i}`}>\n                <b>{popOverValues[i]}</b>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  return (\n    <Popover\n      isOpen={showPopOver ? hovered : false}\n      preferPlace={'below'}\n      body={getPopOver()}\n    >\n      {!stacked && gauged && getGaugedBar()}\n      {stacked && !gauged && getStackedBar()}\n      {!stacked && !gauged && getNonStackedBar()}\n    </Popover>\n  );\n}\n"]}