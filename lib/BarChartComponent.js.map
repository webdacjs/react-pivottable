{"version":3,"sources":["../src/BarChartComponent.js"],"names":["BarChartComponent","index","value","thiskey","stacked","maxValsAttrs","minValsAttrs","barchartClassNames","showBarValues","showPopOver","rowkey","colkey","values","valsAttrs","rowAttrs","hovered","setHovered","popOverKeys","popOverValues","getPercentageFromValue","key","percValue","getBarValue","percentage","usePercentages","toFixed","getBarWrapperClassName","wrapper","getBarClassName","bars","width","barValue","minPerc","chartStyle","marginLeft","getStackedBar","getNonStackedBar","getPopOver","map","i"],"mappings":"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","file":"BarChartComponent.js","sourcesContent":["import React, {useState} from 'react';\nimport Popover from 'react-popover';\n\nexport default function BarChartComponent({\n  index,\n  value,\n  thiskey,\n  stacked,\n  maxValsAttrs,\n  minValsAttrs,\n  barchartClassNames,\n  showBarValues,\n  showPopOver,\n  rowkey,\n  colkey,\n  values,\n  valsAttrs,\n  rowAttrs,\n}) {\n  const [hovered, setHovered] = useState(false);\n  const popOverKeys = [...rowAttrs, ...valsAttrs];\n  const popOverValues = [...rowkey, ...values];\n\n  function getPercentageFromValue(value, key) {\n    const percValue = (value / maxValsAttrs[key]) * 100;\n    return percValue;\n  }\n\n  function getBarValue(value, percentage) {\n    if (!showBarValues || value === 0) {\n      return <span className=\"barChartLabel\"></span>;\n    }\n    if (usePercentages) {\n      return (\n        <span className=\"barChartLabel\">{`${percentage.toFixed(1)}%`}</span>\n      );\n    }\n    return <span className=\"barChartLabel\">{value}</span>;\n  }\n\n  const getBarWrapperClassName = () => {\n    if (barchartClassNames && barchartClassNames.wrapper) {\n      return barchartClassNames.wrapper;\n    }\n    return 'bar-chart-bar';\n  };\n\n  const getBarClassName = index => {\n    if (\n      barchartClassNames &&\n      barchartClassNames.bars &&\n      barchartClassNames.bars[index]\n    ) {\n      return barchartClassNames.bars[index];\n    }\n    return `bar bar${index + 1}`;\n  };\n\n  const width = getPercentageFromValue(value, thiskey);\n  const barValue = getBarValue(value, getPercentageFromValue(value, thiskey));\n\n  const minPerc =\n    minValsAttrs[thiskey] > 0\n      ? 0\n      : getPercentageFromValue(minValsAttrs[thiskey], thiskey) * -1;\n  const chartStyle =\n    width > 0\n      ? {width: `${width}%`, marginLeft: `${minPerc}%`}\n      : {width: `${width * -1}%`, marginLeft: `${minPerc - width * -1}%`};\n\n  const getStackedBar = () => (\n    <div\n      className={getBarClassName(index)}\n      style={chartStyle}\n      onMouseOver={() => setHovered(true)}\n      onMouseOut={() => setHovered()}\n    >\n      {barValue}\n    </div>\n  );\n\n  const getNonStackedBar = () => (\n    <div \n      className={getBarWrapperClassName()} \n      key={`bar-chart-${index}`}\n      onMouseOver={() => setHovered(true)}\n      onMouseOut={() => setHovered()}\n    >\n      <div className={getBarClassName(index)} style={chartStyle}>\n        {barValue}\n      </div>\n    </div>\n  );\n\n  const getPopOver = () => (\n    <div className=\"popoverBox\">\n      <table border=\"0px\">\n        <tbody>\n          {popOverKeys.map((key, i) => (\n            <tr key={`tr-${i}`}>\n              <td width=\"50%\" key={`tdk-${i}`}>\n                <b>{key}</b>:\n              </td>\n              <td width=\"50%\" key={`tdv-${i}`}>\n                {popOverValues[i]}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  return showPopOver ? (\n    <Popover isOpen={hovered} preferPlace={'below'} body={getPopOver()}>\n      {stacked && getStackedBar()}\n      {!stacked && getNonStackedBar()}\n    </Popover>\n  ) : (\n    <div>\n      {stacked && getStackedBar()}\n      {!stacked && getNonStackedBar()}\n    </div>\n  );\n}\n"]}