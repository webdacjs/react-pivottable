{"version":3,"sources":["../src/D3HeaderComponent.js"],"names":["d3","D3HeaderComponent","height","legendValues","usePercentages","buildD3BarChartBuilder","getWidth","val","length","push","builtDataObject","map","x","i","dimension","text","y","width","color","fontColor","widths","builtDataObjectWithX","item","index","Object","assign","slice","reduce","a","b","textX","ref","svg","selectAll","remove","console","log","marginTop","marginRight","marginLeft"],"mappings":";;;;;;AAAA;;;;AACA;;IAAYA,E;;AACZ;;;;;;AAEA,SAASC,iBAAT,OAA2F;AAAA,MAA/DC,MAA+D,QAA/DA,MAA+D;AAAA,MAAvDC,YAAuD,QAAvDA,YAAuD;AAAA,MAAzCC,cAAyC,QAAzCA,cAAyC;AAAA,MAAzBC,sBAAyB,QAAzBA,sBAAyB;;AACzF,MAAMC,WAAW,SAAXA,QAAW;AAAA,WAAO,CAACC,MAAM,IAAI,GAAX,IAAkBJ,aAAaK,MAAtC;AAAA,GAAjB;AACAL,eAAaM,IAAb,CAAkB,EAAlB;;AAEA,MAAMC,kBAAkBP,aAAaQ,GAAb,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAW;AAClDC,iBAAWF,CADuC;AAElDG,YAAMH,CAF4C;AAGlDI,SAAG,CAH+C;AAIlDC,aAAOX,SAASO,CAAT,CAJ2C;AAKlDX,cAAQA,UAAU,EALgC;AAMlDgB,aAAO,aAN2C;AAOlDC,iBAAW;AAPuC,KAAX;AAAA,GAAjB,CAAxB;AASA,MAAMC,SAASV,gBAAgBC,GAAhB,CAAoB;AAAA,WAAKC,EAAEK,KAAP;AAAA,GAApB,CAAf;AACA,MAAMI,uBAAuBX,gBAAgBC,GAAhB,CAAoB,UAACW,IAAD,EAAOC,KAAP;AAAA,WAC/CC,OAAOC,MAAP,CAAcH,IAAd,EAAoB;AAClBV,SAAGW,UAAU,CAAV,GAAc,CAAd,GAAkBH,OAAOM,KAAP,CAAa,CAAb,EAAgBH,KAAhB,EAAuBI,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,IAAIC,CAAd;AAAA,OAA9B,EAA+C,CAA/C,CADH;AAElBC,aACEP,UAAU,CAAV,GAAc,CAAd,GAAkBH,OAAOM,KAAP,CAAa,CAAb,EAAgBH,KAAhB,EAAuBI,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,IAAIC,CAAd;AAAA,OAA9B,EAA+C,CAA/C,IAAoD;AAHtD,KAApB,CAD+C;AAAA,GAApB,CAA7B;;AAQA,MAAME,MAAM,mBACV,eAAO;AACLC,QAAIC,SAAJ,CAAc,GAAd,EAAmBC,MAAnB;AACA7B,2BACE2B,GADF,EAEEX,oBAFF,EAGE,IAHF,EAIE;AAAA,aAAMc,QAAQC,GAAd;AAAA,KAJF;AAMD,GATS,EAUV,CAACjC,YAAD,CAVU,CAAZ;;AAaA,SACE;AACE,SAAK4B,GADP;AAEE,WAAO;AACL7B,cAAQA,MADH;AAELe,aAAO,MAFF;AAGLoB,iBAAW,KAHN;AAILC,mBAAa,KAJR;AAKLC,kBAAY;AALP;AAFT,IADF;AAYD;;kBAEctC,iB","file":"D3HeaderComponent.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport {useD3} from './d3hook.js';\n\nfunction D3HeaderComponent({height, legendValues, usePercentages, buildD3BarChartBuilder}) {\n  const getWidth = val => (val + 1 * 100) / legendValues.length;\n  legendValues.push('');\n\n  const builtDataObject = legendValues.map((x, i) => ({\n    dimension: x,\n    text: x,\n    y: 0,\n    width: getWidth(i),\n    height: height || 16,\n    color: 'transparent',\n    fontColor: '#495057',\n  }));\n  const widths = builtDataObject.map(x => x.width);\n  const builtDataObjectWithX = builtDataObject.map((item, index) =>\n    Object.assign(item, {\n      x: index === 0 ? 0 : widths.slice(0, index).reduce((a, b) => a + b, 0),\n      textX:\n        index === 0 ? 0 : widths.slice(0, index).reduce((a, b) => a + b, 0) + 1,\n    })\n  );\n\n  const ref = useD3(\n    svg => {\n      svg.selectAll('*').remove();\n      buildD3BarChartBuilder(\n        svg,\n        builtDataObjectWithX,\n        true,\n        () => console.log\n      );\n    },\n    [legendValues]\n  );\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: height,\n        width: '100%',\n        marginTop: '0px',\n        marginRight: '0px',\n        marginLeft: '0px',\n      }}\n    ></svg>\n  );\n}\n\nexport default D3HeaderComponent;\n"]}