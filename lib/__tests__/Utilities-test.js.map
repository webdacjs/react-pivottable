{"version":3,"sources":["../../src/__tests__/Utilities-test.js"],"names":["utils","fixtureData","describe","aoaInput","pd","PivotData","data","it","expect","getAggregator","value","toBe","aggregatorName","vals","aosInput","a","b","raggedAosInput","functionInput","record","rows","cols","getRowKeys","toEqual","getColKeys","numNotNull","numNull","Array","from","r","c","records","forEachMatchingRecord","gender","push","x","name","agg","val","format","getVal","aggregators","tpl","aggregatorTemplates","count","countUnique","listUnique","average","sum","calcvalue","multisum","trials","successes","min","max","first","last","median","quantile","var","stdev","sumOverSum","fractionOf","naturalSort","sortedArr","NaN","Infinity","slice","sort","sortAs","numberFormat","nf","scaler","suffix","thousandsSep","decimalSep","prefix","digitsAfterDecimal","df","derivers","dateFormat","Date","binner","bin","toBeNaN"],"mappings":"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","file":"Utilities-test.js","sourcesContent":["import * as utils from '../Utilities';\n/* eslint-disable no-magic-numbers */\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst fixtureData = [\n  ['name', 'gender', 'colour', 'birthday', 'trials', 'successes'],\n  ['Nick', 'male', 'blue', '1982-11-07', 103, 12],\n  ['Jane', 'female', 'red', '1982-11-08', 95, 25],\n  ['John', 'male', 'blue', '1982-12-08', 112, 30],\n  ['Carol', 'female', 'yellow', '1983-12-08', 102, 14],\n];\n\ndescribe('  utils', function() {\n  describe('.PivotData()', function() {\n    describe('with no options', function() {\n      const aoaInput = [['a', 'b'], [1, 2], [3, 4]];\n      const pd = new utils.PivotData({data: aoaInput});\n\n      it('has the correct grand total value', () =>\n        expect(pd.getAggregator([], []).value()).toBe(2));\n    });\n\n    describe('with array-of-array input', function() {\n      const aoaInput = [['a', 'b'], [1, 2], [3, 4]];\n      const pd = new utils.PivotData({\n        data: aoaInput,\n        aggregatorName: 'Sum over Sum',\n        vals: ['a', 'b'],\n      });\n\n      it('has the correct grand total value', () =>\n        expect(pd.getAggregator([], []).value()).toBe((1 + 3) / (2 + 4)));\n    });\n\n    describe('with array-of-object input', function() {\n      const aosInput = [{a: 1, b: 2}, {a: 3, b: 4}];\n      const pd = new utils.PivotData({\n        data: aosInput,\n        aggregatorName: 'Sum over Sum',\n        vals: ['a', 'b'],\n      });\n\n      it('has the correct grand total value', () =>\n        expect(pd.getAggregator([], []).value()).toBe((1 + 3) / (2 + 4)));\n    });\n\n    describe('with ragged array-of-object input', function() {\n      const raggedAosInput = [{a: 1}, {b: 4}, {a: 3, b: 2}];\n      const pd = new utils.PivotData({\n        data: raggedAosInput,\n        aggregatorName: 'Sum over Sum',\n        vals: ['a', 'b'],\n      });\n\n      it('has the correct grand total value', () =>\n        expect(pd.getAggregator([], []).value()).toBe((1 + 3) / (2 + 4)));\n    });\n\n    describe('with function input', function() {\n      const functionInput = function(record) {\n        record({a: 1, b: 2});\n        record({a: 3, b: 4});\n      };\n      const pd = new utils.PivotData({\n        data: functionInput,\n        aggregatorName: 'Sum over Sum',\n        vals: ['a', 'b'],\n      });\n\n      it('has the correct grand total value', () =>\n        expect(pd.getAggregator([], []).value()).toBe((1 + 3) / (2 + 4)));\n    });\n\n    describe('with rows/cols', function() {\n      const pd = new utils.PivotData({\n        data: fixtureData,\n        rows: ['name', 'colour'],\n        cols: ['trials', 'successes'],\n      });\n\n      it('has correctly-ordered row keys', () =>\n        expect(pd.getRowKeys()).toEqual([\n          ['Carol', 'yellow'],\n          ['Jane', 'red'],\n          ['John', 'blue'],\n          ['Nick', 'blue'],\n        ]));\n\n      it('has correctly-ordered col keys', () =>\n        expect(pd.getColKeys()).toEqual([\n          [95, 25],\n          [102, 14],\n          [103, 12],\n          [112, 30],\n        ]));\n\n      it('can be iterated over', function() {\n        let numNotNull = 0;\n        let numNull = 0;\n        for (const r of Array.from(pd.getRowKeys())) {\n          for (const c of Array.from(pd.getColKeys())) {\n            if (pd.getAggregator(r, c).value() !== null) {\n              numNotNull++;\n            } else {\n              numNull++;\n            }\n          }\n        }\n        expect(numNotNull).toBe(4);\n        expect(numNull).toBe(12);\n      });\n\n      it('returns matching records', function() {\n        const records = [];\n        pd.forEachMatchingRecord({gender: 'male'}, x => records.push(x.name));\n        expect(records).toEqual(['Nick', 'John']);\n      });\n\n      it('has a correct spot-checked aggregator', function() {\n        const agg = pd.getAggregator(['Carol', 'yellow'], [102, 14]);\n        const val = agg.value();\n        expect(val).toBe(1);\n        expect(agg.format(val)).toBe('1');\n      });\n\n      it('has a correct grand total aggregator', function() {\n        const agg = pd.getAggregator([], []);\n        const val = agg.value();\n        expect(val).toBe(4);\n        expect(agg.format(val)).toBe('4');\n      });\n    });\n  });\n\n  describe('.aggregatorTemplates', function() {\n    const getVal = (agg, vals) => {\n      return new utils.PivotData({\n        data: fixtureData,\n        aggregators: {agg},\n        aggregatorName: 'agg',\n        vals,\n      })\n        .getAggregator([], [])\n        .value();\n    };\n    const tpl = utils.aggregatorTemplates;\n\n    describe('.count', () =>\n      it('works', () => expect(getVal(tpl.count(), [])).toBe(4)));\n\n    describe('.countUnique', () =>\n      it('works', () => expect(getVal(tpl.countUnique(), ['gender'])).toBe(2)));\n\n    describe('.listUnique', () =>\n      it('works', () =>\n        expect(getVal(tpl.listUnique(), ['gender'])).toBe('male,female')));\n\n    describe('.average', () =>\n      it('works', () => expect(getVal(tpl.average(), ['trials'])).toBe(103)));\n\n    describe('.sum', () =>\n      it('works', () => expect(getVal(tpl.sum(), ['trials'])).toBe(412)));\n\n    describe('.multisum', () =>\n    it('works', () => {\n      const calcvalue = getVal(tpl.multisum(), ['trials', 'successes'])\n      expect(calcvalue.trials).toBe(412)\n      expect(calcvalue.successes).toBe(81)\n    }))\n\n    describe('.min', () =>\n      it('works', () => expect(getVal(tpl.min(), ['trials'])).toBe(95)));\n\n    describe('.max', () =>\n      it('works', () => expect(getVal(tpl.max(), ['trials'])).toBe(112)));\n\n    describe('.first', () =>\n      it('works', () => expect(getVal(tpl.first(), ['name'])).toBe('Carol')));\n\n    describe('.last', () =>\n      it('works', () => expect(getVal(tpl.last(), ['name'])).toBe('Nick')));\n\n    describe('.average', () =>\n      it('works', () => expect(getVal(tpl.average(), ['trials'])).toBe(103)));\n\n    describe('.median', () =>\n      it('works', () => expect(getVal(tpl.median(), ['trials'])).toBe(102.5)));\n\n    describe('.quantile', () =>\n      it('works', function() {\n        expect(getVal(tpl.quantile(0), ['trials'])).toBe(95);\n        expect(getVal(tpl.quantile(0.1), ['trials'])).toBe(98.5);\n        expect(getVal(tpl.quantile(0.25), ['trials'])).toBe(98.5);\n        expect(getVal(tpl.quantile(1 / 3), ['trials'])).toBe(102);\n        expect(getVal(tpl.quantile(1), ['trials'])).toBe(112);\n      }));\n\n    describe('.var', () =>\n      it('works', () =>\n        expect(getVal(tpl.var(), ['trials'])).toBe(48.666666666666686)));\n\n    describe('.stdev', () =>\n      it('works', () =>\n        expect(getVal(tpl.stdev(), ['trials'])).toBe(6.976149845485451)));\n\n    describe('.sumOverSum', () =>\n      it('works', () =>\n        expect(getVal(tpl.sumOverSum(), ['successes', 'trials'])).toBe(\n          (12 + 25 + 30 + 14) / (95 + 102 + 103 + 112)\n        )));\n\n    describe('.fractionOf', () =>\n      it('works', () =>\n        expect(getVal(tpl.fractionOf(tpl.sum()), ['trials'])).toBe(1)));\n  });\n\n  describe('.naturalSort()', function() {\n    const {naturalSort} = utils;\n\n    const sortedArr = [\n      null,\n      NaN,\n      -Infinity,\n      '-Infinity',\n      -3,\n      '-3',\n      -2,\n      '-2',\n      -1,\n      '-1',\n      0,\n      '2e-1',\n      1,\n      '01',\n      '1',\n      2,\n      '002',\n      '002e0',\n      '02',\n      '2',\n      '2e-0',\n      3,\n      10,\n      '10',\n      '11',\n      '12',\n      '1e2',\n      '112',\n      Infinity,\n      'Infinity',\n      '1a',\n      '2a',\n      '12a',\n      '20a',\n      'A',\n      'A',\n      'NaN',\n      'a',\n      'a',\n      'a01',\n      'a012',\n      'a02',\n      'a1',\n      'a2',\n      'a12',\n      'a12',\n      'a21',\n      'a21',\n      'b',\n      'c',\n      'd',\n      'null',\n    ];\n\n    it('sorts naturally (null, NaN, numbers & numbery strings, Alphanum for text strings)', () =>\n      expect(sortedArr.slice().sort(naturalSort)).toEqual(sortedArr));\n  });\n\n  describe('.sortAs()', function() {\n    const {sortAs} = utils;\n\n    it('sorts with unknown values sorted at the end', () =>\n      expect([5, 2, 3, 4, 1].sort(sortAs([4, 3, 2]))).toEqual([4, 3, 2, 1, 5]));\n\n    it('sorts lowercase after uppercase', () =>\n      expect(['Ab', 'aA', 'aa', 'ab'].sort(sortAs(['Ab', 'Aa']))).toEqual([\n        'Ab',\n        'ab',\n        'aa',\n        'aA',\n      ]));\n  });\n\n  describe('.numberFormat()', function() {\n    const {numberFormat} = utils;\n\n    it('formats numbers', function() {\n      const nf = numberFormat();\n      expect(nf(1234567.89123456)).toEqual('1,234,567.89');\n    });\n\n    it('formats booleans', function() {\n      const nf = numberFormat();\n      expect(nf(true)).toEqual('1.00');\n    });\n\n    it('formats numbers in strings', function() {\n      const nf = numberFormat();\n      expect(nf('1234567.89123456')).toEqual('1,234,567.89');\n    });\n\n    it(\"doesn't formats strings\", function() {\n      const nf = numberFormat();\n      expect(nf('hi there')).toEqual('');\n    });\n\n    it(\"doesn't formats objects\", function() {\n      const nf = numberFormat();\n      expect(nf({a: 1})).toEqual('');\n    });\n\n    it('formats percentages', function() {\n      const nf = numberFormat({scaler: 100, suffix: '%'});\n      expect(nf(0.12345)).toEqual('12.35%');\n    });\n\n    it('adds separators', function() {\n      const nf = numberFormat({thousandsSep: 'a', decimalSep: 'b'});\n      expect(nf(1234567.89123456)).toEqual('1a234a567b89');\n    });\n\n    it('adds prefixes and suffixes', function() {\n      const nf = numberFormat({prefix: 'a', suffix: 'b'});\n      expect(nf(1234567.89123456)).toEqual('a1,234,567.89b');\n    });\n\n    it('scales and rounds', function() {\n      const nf = numberFormat({digitsAfterDecimal: 3, scaler: 1000});\n      expect(nf(1234567.89123456)).toEqual('1,234,567,891.235');\n    });\n  });\n\n  describe('.derivers', function() {\n    describe('.dateFormat()', function() {\n      const df = utils.derivers.dateFormat(\n        'x',\n        'abc % %% %%% %a %y %m %n %d %w %x %H %M %S',\n        true\n      );\n\n      it('formats date objects', () =>\n        expect(df({x: new Date('2015-01-02T23:43:11Z')})).toBe(\n          'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\n        ));\n\n      it('formats input parsed by Date.parse()', function() {\n        expect(df({x: '2015-01-02T23:43:11Z'})).toBe(\n          'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\n        );\n\n        expect(df({x: 'bla'})).toBe('');\n      });\n    });\n\n    describe('.bin()', function() {\n      const binner = utils.derivers.bin('x', 10);\n\n      it('bins numbers', function() {\n        expect(binner({x: 11})).toBe(10);\n\n        expect(binner({x: 9})).toBe(0);\n\n        expect(binner({x: 111})).toBe(110);\n      });\n\n      it('bins booleans', () => expect(binner({x: true})).toBe(0));\n\n      it('bins negative numbers', () => expect(binner({x: -12})).toBe(-10));\n\n      it(\"doesn't bin strings\", () => expect(binner({x: 'a'})).toBeNaN());\n\n      it(\"doesn't bin objects\", () => expect(binner({x: {a: 1}})).toBeNaN());\n    });\n  });\n});\n"]}